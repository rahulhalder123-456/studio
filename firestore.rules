rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Helper Functions ---
    function isAdmin() {
      // ðŸ”´ IMPORTANT: Replace with your actual Firebase User IDs (UIDs) from the Authentication tab
      let adminUIDs = [
        'ToBDMq0KVIgnLQCEeFzxLzB4HUj1' // This is an example UID, replace it
      ];
      return request.auth.uid in adminUIDs;
    }

    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // --- User Profiles & Data ---
    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow create, update: if isOwner(userId);

      // Payment methods are private to the user
      match /paymentMethods/{paymentMethodId} {
        allow read, write, delete: if isOwner(userId);
      }
    }

    // --- Projects ---
    match /projects/{projectId} {
      allow create: if request.auth != null;
      allow read, update: if isOwner(resource.data.userId) || isAdmin();
      
      // Time entries can only be managed by admins
      match /timeEntries/{timeEntryId} {
        allow read, write: if isAdmin();
      }
    }
    
    // --- Public Content ---
    match /featuredProjects/{projectId} {
        allow read: if true;
        allow write: if isAdmin();
    }
    match /reviews/{reviewId} {
        allow read: if true;
        // Only authenticated users can create reviews, and only for themselves
        allow create: if isOwner(request.resource.data.userId);
    }

    // --- Chat System ---
    match /chats/{chatId} {
        // Chat documents and their message subcollections can only be accessed
        // by the client whose UID is in the chatId ('support_CLIENTUID') or by an admin.
        // This single rule is efficient as it doesn't require extra document reads.
        function isChatParticipant() {
            let clientUid = chatId.split('_')[1];
            return request.auth.uid == clientUid || isAdmin();
        }
        
        allow read, write: if isChatParticipant();

        match /messages/{messageId} {
            allow read, write: if isChatParticipant();
        }
    }
  }
}
