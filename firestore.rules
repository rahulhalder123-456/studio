
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isUser(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    function isAdmin() {
      // ðŸ”´ Replace with your actual Firebase User IDs (UIDs)
      let ADMIN_UIDS = [
        'ToBDMq0KVIgnLQCEeFzxLzB4HUj1',
      ];
      return request.auth != null && request.auth.uid in ADMIN_UIDS;
    }

    // --- Users Collection ---
    // Users can read and write their own profile.
    // Admins can read any user profile.
    match /users/{userId} {
      allow read: if isUser(userId) || isAdmin();
      allow write: if isUser(userId);

      // --- Payment Methods Subcollection ---
      // Users can manage their own payment methods.
      match /paymentMethods/{methodId} {
        allow read, write, delete: if isUser(userId);
      }
    }

    // --- Projects Collection ---
    // Logged-in users can create projects.
    // Owners and admins can read/update projects.
    // Only admins can delete.
    match /projects/{projectId} {
      allow create: if request.auth != null;
      allow read, update: if isUser(resource.data.userId) || isAdmin();
      allow delete: if isAdmin();
    }
    
    // --- Featured Projects (Showcase) ---
    // Anyone can read featured projects for the landing page.
    // Only admins can create, update, or delete them.
    match /featuredProjects/{projectId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // --- Chats & Messages Collection ---
    // Users can read/write their own support chat. Admins can access any.
    // The chat document ID is in the format `support_{userId}`.
    match /chats/{chatId} {
      function isOwner() {
        // Extract the userId from a chatId like "support_XXXXXXXX"
        let ownerId = chatId.split('_')[1];
        return isUser(ownerId);
      }
      
      // Allow access to the chat document (for timestamps) and its messages
      // if the user is the owner of the chat or is an admin.
      allow read, write: if isOwner() || isAdmin();
      
      match /messages/{messageId} {
        allow read, write: if isOwner() || isAdmin();
      }
    }
  }
}
