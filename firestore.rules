rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isAdmin() {
      // An admin's UID must exist in the 'config/admins' document.
      // This is the single source of truth for admin status.
      return request.auth.uid in get(/databases/$(database)/documents/config/admins).data.uids;
    }

    // USER PROFILES
    // Users can read/write their own profile. Admins can read anyone's profile.
    match /users/{userId} {
      allow read: if request.auth.uid == userId || isAdmin();
      allow write: if request.auth.uid == userId;
    }

    // PROJECTS
    // Users can create projects. They can read/write their own projects. Admins can read/write any project.
    match /projects/{projectId} {
      allow create: if request.auth.uid == request.resource.data.userId;
      allow read, update: if request.auth.uid == resource.data.userId || isAdmin();
      allow delete: if isAdmin(); // Only admins can delete projects
    }
    
    // TIME ENTRIES (sub-collection of projects)
    // Only admins can create, read, or update time entries.
    match /projects/{projectId}/timeEntries/{entryId} {
        allow read, write: if isAdmin();
    }

    // CHATS
    // Anyone can read/write to their own chat room. Admins can read/write to any chat room.
    // The chat room ID is formatted as `support_{userId}`.
    match /chats/{chatId} {
        allow read, write: if request.auth.uid == chatId.split('_')[1] || isAdmin();
        
        // MESSAGES (sub-collection of chats)
        match /messages/{messageId} {
           allow read, write: if request.auth.uid == chatId.split('_')[1] || isAdmin();
        }
    }
    
    // PAYMENT METHODS (sub-collection of users)
    // Users can manage their own payment methods.
    match /users/{userId}/paymentMethods/{methodId} {
        allow read, write, delete: if request.auth.uid == userId;
    }
    
    // FEATURED PROJECTS
    // Only Admins can manage featured projects.
    match /featuredProjects/{projectId} {
        allow read: if true; // Publicly readable
        allow write, delete: if isAdmin();
    }
    
    // REVIEWS
    // Users can create reviews. Admins can read/delete any review. Anyone can read reviews.
    match /reviews/{reviewId} {
        allow read: if true; // Publicly readable
        allow create: if request.auth.uid == request.resource.data.userId;
        allow delete: if isAdmin();
    }

    // ADMIN CONFIGURATION
    // Only admins can read or modify the admin list.
    match /config/admins {
      // Allow any authenticated user to read the admin list (for client-side checks)
      // but only allow an existing admin to write to it.
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
  }
}
