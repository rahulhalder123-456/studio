
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // --- Helper Functions ---
    function isAdmin() {
      // ðŸ”´ Replace with your actual Firebase Admin User ID (UID)
      return request.auth.uid in [
        'ToBDMq0KVIgnLQCEeFzxLzB4HUj1'
      ];
    }
  
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // --- USERS Collection ---
    // Users can read/update their own profile.
    match /users/{userId} {
      allow read, update: if isOwner(userId);
      allow create: if isAuthenticated();
      
      // Payment methods are private to the user
      match /paymentMethods/{methodId} {
        allow read, create, delete: if isOwner(userId);
      }
    }
    
    // --- PROJECTS Collection ---
    match /projects/{projectId} {
      // Any authenticated user can create a project, but must be for themselves.
      allow create: if isAuthenticated() && isOwner(request.resource.data.userId);

      // Only the project owner or an admin can read the project details.
      allow read: if isOwner(resource.data.userId) || isAdmin();
      
      // Only the project owner or an admin can update a project.
      allow update: if isOwner(resource.data.userId) || isAdmin();

      // Time Entries sub-collection
      match /timeEntries/{entryId} {
        // Owner and admin can read. Admin can write.
        allow read: if isOwner(get(/databases/$(database)/documents/projects/$(projectId)).data.userId) || isAdmin();
        allow write: if isAdmin();
      }
    }
    
    // --- CHATS Collection ---
    match /chats/{chatId} {
      // The user who owns the chat, or an admin, can read/write the parent chat doc.
      // chatId is expected to be 'support_{userId}'
      allow read, write: if isOwner(chatId.split('_')[1]) || isAdmin();
      
      // Messages sub-collection
      match /messages/{messageId} {
        // The user who owns the chat, or an admin, can read messages.
        allow read: if isOwner(chatId.split('_')[1]) || isAdmin();
        
        // The user who owns the chat, or an admin, can create messages.
        allow create: if isOwner(chatId.split('_')[1]) || isAdmin();
      }
    }

    // --- REVIEWS Collection ---
    // Anyone can read reviews (for the homepage).
    match /reviews/{reviewId} {
      allow read: if true;
      // Only the user who owns the review can create it.
      allow create: if isAuthenticated() && isOwner(request.resource.data.userId);
    }
    
    // --- FEATURED PROJECTS Collection ---
    // Publicly readable. Only admins can modify.
    match /featuredProjects/{projectId} {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}
