
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isAuth() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // ðŸ”´ IMPORTANT: This must contain your actual Firebase Admin User ID (UID)
    function isAdmin() {
      return request.auth.uid in [
        'ToBDMq0KVIgnLQCEeFzxLzB4HUj1'
      ];
    }
    
    function isChatParticipant() {
        // A user is a participant if their UID is in the participants array.
        // Admins are also considered participants of all chats.
        return request.auth.uid in resource.data.participants || isAdmin();
    }

    // --- Collections ---

    // User Profiles
    match /users/{userId} {
      allow create: if isAuth();
      allow read, update: if isOwner(userId);
      // Admins can view any user's profile and list all users. This fixes the error.
      allow get, list: if isAdmin();
      
      // Payment Methods (sub-collection)
      match /paymentMethods/{methodId} {
        // Users can manage their own payment methods.
        allow read, write, delete: if isOwner(userId);
      }
    }

    // Projects
    match /projects/{projectId} {
      allow create: if isAuth();
      // Only the project owner can delete their project
      allow delete: if isOwner(resource.data.userId);
      // Owner or admin can read and update
      allow read, update: if isOwner(resource.data.userId) || isAdmin();
    }
    
    // Featured work for landing page
    match /featuredProjects/{projectId} {
        // Anyone can read featured projects for the showcase
        allow read: if true;
        // Only admins can add, edit, or remove featured projects
        allow write: if isAdmin();
    }
    
    // Chat
    match /chats/{chatId} {
      // Allow read/write access to participants of the chat, or admins
      allow read, write: if isChatParticipant();
      
      // Messages (sub-collection)
      match /messages/{messageId} {
        allow read, create: if isChatParticipant();
      }
    }
  }
}
