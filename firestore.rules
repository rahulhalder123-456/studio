rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      // ðŸ”´ IMPORTANT: Replace with your actual Admin UIDs
      return request.auth.uid in ['ToBDMq0KVIgnLQCEeFzxLzB4HUj1'];
    }

    match /users/{userId} {
      allow read, update, create: if request.auth.uid == userId;
      allow get, list: if isAdmin();
    }

    match /users/{userId}/paymentMethods/{methodId} {
      allow read, create, delete: if request.auth.uid == userId;
    }

    match /projects/{projectId} {
      // Allow project creation if the user ID is present
      allow create: if request.resource.data.userId != null && request.auth.uid == request.resource.data.userId;
      allow get: if request.auth != null;
      allow list: if isAdmin();
      allow update, delete: if request.auth.uid == resource.data.userId;
    }

    match /chats/{chatId} {
      function isParticipantOrAdmin() {
        return request.auth.uid in resource.data.participants || isAdmin();
      }
      allow read, write: if isParticipantOrAdmin();
      allow list: if isAdmin();
    }

    match /chats/{chatId}/messages/{messageId} {
      allow read, create: if exists(/databases/$(database)/documents/chats/$(chatId)) &&
        (get(/databases/$(database)/documents/chats/$(chatId)).data.participants.hasAny([request.auth.uid]) || isAdmin());
    }
  }
}
