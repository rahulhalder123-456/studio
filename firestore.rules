
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user is an admin.
    // NOTE: This relies on a field `isAdmin` in the user's profile document.
    // This is more secure than hardcoding UIDs in client-side code.
    function isAppAdmin(userId) {
      return exists(/databases/$(database)/documents/users/$(userId)) &&
             get(/databases/$(database)/documents/users/$(userId)).data.isAdmin == true;
    }

    // --- Users Collection ---
    // Users can read/write their own profile data.
    // Admins can read all user profiles.
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && isAppAdmin(request.auth.uid);

      // --- Payment Methods Subcollection ---
      // Users can manage their own payment methods.
      match /paymentMethods/{methodId} {
        allow read, create, update, delete: if request.auth != null && request.auth.uid == userId;
      }
    }

    // --- Projects Collection ---
    // Logged-in users can create projects.
    // Project owners can read/write their own projects.
    // Admins can read/write all projects.
    match /projects/{projectId} {
      allow create: if request.auth != null;
      allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
      allow read, write: if request.auth != null && isAppAdmin(request.auth.uid);
    }

    // --- Featured Projects Collection ---
    // Everyone can read the list of featured projects.
    // Only admins can write to featured projects.
    match /featuredProjects/{projectId} {
        allow read;
        allow write: if request.auth != null && isAppAdmin(request.auth.uid);
    }
    
    // --- Chats Collection ---
    // Chat is identified by `support_{userId}`.
    // A user can read/write to their own chat document (`support_...`).
    // An admin can read/write to any chat document.
    match /chats/{chatId} {
        allow read, write: if request.auth != null && (request.auth.uid == chatId.split('_')[1] || isAppAdmin(request.auth.uid));

        // --- Messages Subcollection ---
        // Participants of a chat (the client or an admin) can read/write messages.
        match /messages/{messageId} {
            allow read, write: if request.auth != null && (request.auth.uid == chatId.split('_')[1] || isAppAdmin(request.auth.uid));
        }
    }
  }
}
