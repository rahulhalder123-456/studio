rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      // ðŸ”´ IMPORTANT: This list must match the UIDs in src/lib/admin.ts
      return request.auth.uid in ['ToBDMq0KVIgnLQCEeFzxLzB4HUj1'];
    }

    // Users can read and write their own profile. Admins can view all profiles.
    match /users/{userId} {
      allow get, update: if request.auth.uid == userId;
      allow create: if request.auth.uid == userId;
      allow list: if isAdmin(); // Admin can list all users
    }

    // Users can manage their own payment methods.
    match /users/{userId}/paymentMethods/{methodId} {
      allow read, create, delete: if request.auth.uid == userId;
    }

    // Users can create/manage their own projects. Admins can manage all projects.
    match /projects/{projectId} {
      allow create: if request.auth.uid == request.resource.data.userId;
      
      // A regular user can only read their own projects.
      // An admin can read any project.
      // This rule works for queries like `where('userId', '==', auth.uid)` because Firestore
      // can verify the query will only return documents the user is permitted to see.
      allow read: if resource.data.userId == request.auth.uid || isAdmin();
      
      // Users can update/delete their own projects. Admins can update/delete any project.
      allow update, delete: if resource.data.userId == request.auth.uid || isAdmin();
    }

    // Participants in a chat or Admins can read/write to it. Admins can list all chats.
    match /chats/{chatId} {
      function isParticipantOrAdmin() {
        return request.auth.uid in resource.data.participants || isAdmin();
      }
      allow read, write: if isParticipantOrAdmin();
      allow list: if isAdmin();
    }

    // Participants in a chat or Admins can read/create messages within it.
    match /chats/{chatId}/messages/{messageId} {
      function isChatParticipantOrAdmin() {
        return exists(/databases/$(database)/documents/chats/$(chatId)) &&
          (request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants || isAdmin());
      }
      allow read, create: if isChatParticipantOrAdmin();
    }
  }
}
