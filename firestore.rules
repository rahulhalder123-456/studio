
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for admin role
    function isAdmin(userId) {
      // ðŸ”´ IMPORTANT: Replace with your actual Firebase User IDs (UIDs)
      let adminUids = [
        'ToBDMq0KVIgnLQCEeFzxLzB4HUj1',
        // Add other admin UIDs here
      ];
      return userId in adminUids;
    }

    // USERS: Users can only read/write their own profile
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth.uid == userId;
    }
    
    // USER SUBCOLLECTIONS: Users can manage their own subcollections
    match /users/{userId}/{subcollection}/{docId} {
        allow read, write: if request.auth.uid == userId;
    }

    // PROJECTS:
    // - Logged-in users can create projects
    // - Admins can read all projects
    // - Users can only read/update their own projects
    match /projects/{projectId} {
      allow create: if request.auth != null;
      allow read, update: if request.auth.uid == resource.data.userId || isAdmin(request.auth.uid);
    }
    
    // PROJECT TIME ENTRIES:
    // - Logged-in users can read time entries for a project
    // - Admins can create, update, and delete time entries
    match /projects/{projectId}/timeEntries/{entryId} {
        allow read: if request.auth != null;
        allow create, update, delete: if isAdmin(request.auth.uid);
    }

    // CHATS:
    // - Users can only access chat rooms where their UID is a participant
    // - Admins can access all chat rooms
    match /chats/{chatId} {
      allow get: if request.auth.uid in resource.data.participants || isAdmin(request.auth.uid);
      allow list: if isAdmin(request.auth.uid); // Only admins can list all chats
      allow create: if request.auth != null; // Anyone can initiate a chat
      
      // MESSAGES SUBCOLLECTION:
      // - Users can read/write messages in a chat they are part of
      // - Admins can read/write messages in any chat
      match /messages/{messageId} {
        allow read, create: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants || isAdmin(request.auth.uid);
      }
    }
    
    // REVIEWS:
    // - Reviews are public to read (for the testimonials section)
    // - Only logged-in users can create reviews
    // - A user can only update/delete their own review
    match /reviews/{reviewId} {
        allow read: if true;
        allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
        allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // FEATURED PROJECTS (for homepage showcase)
    // - Publicly readable
    // - Only admins can write (create, update, delete)
    match /featuredProjects/{projectId} {
        allow read: if true;
        allow write: if isAdmin(request.auth.uid);
    }
  }
}
