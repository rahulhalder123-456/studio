
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      // ðŸ”´ IMPORTANT: Replace with your actual Firebase User ID (UID)
      return request.auth.uid in ['ToBDMq0KVIgnLQCEeFzxLzB4HUj1'];
    }
    
    // Helper function to check if a user owns the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // --- Users ---
    // Users can read/write their own profile document.
    match /users/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // Admins can read all user profiles.
    match /users/{userId} {
      allow get, list: if isAdmin();
    }
    
    // --- Payment Methods (Subcollection of Users) ---
    // Users can manage their own payment methods.
    match /users/{userId}/paymentMethods/{methodId} {
        allow read, write, delete: if isOwner(userId);
    }

    // --- Projects ---
    // Users can create projects.
    // Owners can read and update their own projects.
    match /projects/{projectId} {
      allow create: if request.auth != null;
      allow read, update: if isOwner(request.resource.data.userId);
    }
    
    // Admins can read, update, and delete any project.
    match /projects/{projectId} {
        allow get, list, update, delete: if isAdmin();
    }

    // --- Time Entries (Subcollection of Projects) ---
    // Admins can create, read, update, delete time entries.
    match /projects/{projectId}/timeEntries/{entryId} {
        allow read, write, delete: if isAdmin();
    }
    
    // --- Chats ---
    // Chat documents are named `support_{userId}`.
    // Participants can read/write their chat document.
    match /chats/{chatId} {
        allow read, write: if request.auth.uid in resource.data.participants || isAdmin();
        
        match /messages/{messageId} {
            // A user can only read messages if they are a participant of the parent chat.
            allow read: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants || isAdmin();
            
            // A user can only create messages in their own designated chat channel. Admins can create in any.
            allow create: if (chatId == 'support_' + request.auth.uid) || isAdmin();
        }
    }
    
    // --- Featured Projects ---
    // Public can read featured projects for the showcase.
    // Admins can create, update, delete featured projects.
    match /featuredProjects/{projectId} {
        allow get, list: if true;
        allow write, delete: if isAdmin();
    }

    // --- Reviews ---
    // Public can read reviews for the testimonials section.
    match /reviews/{reviewId} {
      allow get, list: if true;
    }
    
    // Users can only create a review if they are the owner of the associated project
    // and the project status is 'Closed'.
    match /reviews/{reviewId} {
        allow create: if request.auth.uid != null
            && isOwner(request.resource.data.userId)
            && get(/databases/$(database)/documents/projects/$(request.resource.data.projectId)).data.status == 'Closed';
    }
  }
}
    