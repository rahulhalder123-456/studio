
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Admin Role Helper Function ---
    // In a production app, this could be a check against a 'roles' collection.
    // For this prototype, we hardcode the Admin UIDs for simplicity.
    // IMPORTANT: Replace with your actual Admin Firebase User IDs (UIDs).
    function isAdmin(userId) {
      // The UIDs listed here are from src/lib/admin.ts
      return userId in [
        'ToBDMq0KVIgnLQCEeFzxLzB4HUj1'
      ];
    }
    
    // --- Default Security: Deny all reads/writes by default ---
    match /{document=**} {
      allow read, write: if false;
    }
    
    // --- Users Collection ---
    // Users can create and update their own profile.
    // Admins can read all user profiles.
    match /users/{userId} {
      allow read: if request.auth.uid == userId || isAdmin(request.auth.uid);
      allow create, update: if request.auth.uid == userId;
      
      // --- Payment Methods Subcollection ---
      // Users can manage their own payment methods.
      match /paymentMethods/{paymentMethodId} {
        allow read, create, delete: if request.auth.uid == userId;
      }
    }
    
    // --- Projects Collection ---
    // Authenticated users can create projects.
    // Project owners and Admins can read a project.
    // Project owners and Admins can update a project (e.g., change status).
    match /projects/{projectId} {
      allow create: if request.auth != null;
      allow read, update: if resource.data.userId == request.auth.uid || isAdmin(request.auth.uid);
      // Deletion is typically restricted or handled via a "soft delete" status change.
      allow delete: if false; 
    }

    // --- Featured Projects Collection (for Homepage Showcase) ---
    // This collection is publically readable for the homepage.
    // Only admins can add, update, or delete featured projects.
    match /featuredProjects/{projectId} {
      allow read: if true;
      allow write: if request.auth != null && isAdmin(request.auth.uid);
    }
    
    // --- Chats Collection ---
    // Allow users to create their own chat document.
    // Allow participants (the user and an admin) to read/write messages.
    match /chats/{chatId} {
      allow read, write: if request.auth.uid in resource.data.participants || isAdmin(request.auth.uid);
      
      // Messages subcollection
      match /messages/{messageId} {
        allow read, create: if request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants || isAdmin(request.auth.uid);
      }
    }
  }
}
